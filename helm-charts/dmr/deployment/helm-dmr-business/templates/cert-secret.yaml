apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Values.name }}-cert-secret"
  namespace: "{{ .Values.global.namespace }}"
  labels:
  {{- include "common.labels" . | nindent 4 }}
type: Opaque
data:
  # audit integration
  audit.pfx: "{{ .Values.audit.audit_pfx }}"
  kafka-trust.pfx: "{{ .Values.audit.kafka_trust_pfx }}"
  # role model (data.event)
  kafka-acl-keystore.pfx: "{{ .Values.role_model.keystore }}"
  kafka-acl-truststore.pfx: "{{ .Values.role_model.trustore }}"
  # tracing
  tracing-ca-cert.pem: "{{ .Values.tracing.tracing_ca_cert }}"
  tracing-client-cert-key.pem: "{{ .Values.tracing.tracing_client_cert_key }}"
  tracing-client-cert.pem: "{{ .Values.tracing.tracing_client_cert }}"
  # ECM
  {{ if and (.Values.business_app.EMC_SSL_ENABLED) (.Values.business_app.EMC_KEYSTORE_ENABLED) }}
  ecm_keystore.jks: "{{ .Values.business_app.ecm_keystore }}"
  {{- end }}
  {{ if and (.Values.business_app.EMC_SSL_ENABLED) (.Values.business_app.EMC_TRUSTSTORE_ENABLED) }}
  ecm_truststore.jks: "{{ .Values.business_app.ecm_truststore }}"
  {{- end }}
  # Session service (Сессионные данные)
  {{ if and (.Values.business_app.SESSION_DATA_SSL_ENABLED) (.Values.business_app.SESSION_DATA_KEYSTORE_ENABLED) }}
  sd_keystore.jks: "{{ .Values.business_app.sd_keystore }}"
  {{- end }}
  {{ if and (.Values.business_app.SESSION_DATA_SSL_ENABLED) (.Values.business_app.SESSION_DATA_TRUSTSTORE_ENABLED) }}
  sd_truststore.jks: "{{ .Values.business_app.sd_truststore }}"
  {{- end }}